---
title: "The Anatomy of a Hit"
subtitle: "Modeling Popularity of Billboard Artists using Spotify Audio Features"
author: 
  - Luca Carnegie
thanks: "Code and data are available at: https://github.com/lcarnegie/popularity-modeling. Thank you to Michaela Drouillard for your insights on Spotify and it's metrics. Special hat tip goes to Rajan Maghera and my amazing parents, Cristina and Shane for your constant support and encouragement. I could not have done this without you."
date: April 24 2024
date-format: long
abstract: "What makes a hit pop song? This paper examines the audio features that characterize mainstream music's biggest hits. By analyzing data from the discographies of the highest-charting artists on the Billboard Hot 100, the research identifies key attributes associated with popular songs. Multivariate regression analysis reveals that higher levels of danceability, explicit lyrics, and loudness are positively related to popularity, while emotional positivity (valence) exhibits a negative relationship. Overall, this work quantifies some attributes underpinning iconic pop successes and can empower professional pop musicians to make more informed creative decisions with their work."
format: pdf
toc: true
number-sections: true
bibliography: references.bib
nocite: |
  @*
---

```{r setup}
#| include: false
#| warning: false
#| message: false

# Load necessary libraries 
library(tidyverse)
library(ggplot2)
library(arrow)
library(kableExtra)
library(knitr)
library(broom)
library(modelsummary)
library(jtools)

# Read in data for visualization
spotify_data <- read_parquet("../data/analysis_data/dataset.parquet")


```

\newpage

# Introduction

Throughout history, musicians have aspired to write hit songs and achieve mainstream success in the music industry. However, for major music companies, signing artists without a proven track record is a substantial risk, as most aspirants fail to produce hits. This has led to a concentrated market dominated by a small group of "superstars", such as Taylor Swift, who consistently top the charts [@rosen1981]. Breaking into the music industry, then, presents a unique challenge for aspiring musicians' art: what elements contribute to a pop song's mass appeal?

The field of Hit Song Science, which employs statistical methods to predict song popularity, has gained traction with the increasingly widespread availability of economical computing resources. Researchers [@dodds2010], students [@phametal2015], and likely record companies have attempted to construct models that attempt to explain song popularity, though the latter's efforts remain proprietary, leaving artists without access to this knowledge.

This study diverges from previous approaches by constructing a dataset solely from the discographies of the best-performing artists on the Billboard Hot 100, the preeminent metric of success in the United States music industry. By focusing exclusively on the most successful artists' music, the elements that define enduring hits in the US market can be more easily identified. The analysis employs multivariate regression to estimate a song's Spotify-generated popularity score, using several audio features derived from Spotify's API as predictors.  

The regression results reveal statistically significant positive relationships between danceability, explicit lyrics, loudness, and Spotify popularity score, as well as a significant negative relationship between song valence (general positivity) and popularity score, after controlling for other variables.

In the current era of music streaming, competition for stardom is intense. Understanding the key elements driving song success could empower artists to craft hits more effectively and potentially achieve greater independence from record labels [@burke1997]. This data-driven approach could provide a strategic advantage for artists in the pursuit of mainstream success.

The paper is structured as follows: [@sec-data] provides a detailed overview of the dataset and analyzes each predictor individually; [@sec-model] outlines the regression model; [@sec-results] presents and discusses the results; and [@sec-discussion] critically examines the findings and their implications.


# Data Analysis {#sec-data}

The Billboard Hot 100 ranks the most popular U.S. songs weekly based on radio plays, sales, and streaming [@aboutbillboard]. Artists with songs frequently on this chart should have mass appeal, motivating the analysis of elements that define the popularity of those "hits". Using Billboard also scopes this analysis to solely the US market

Unlike other datasets like The Million Song dataset used by Pham et al., Spotify's web API provides ready-made quantitative audio features (tempo, key, danceability, etc.) as well as calculated popularity score based on recent and total play counts for artists' songs, facilitating analysis of the determinants of a song's popularity. 

Since the Spotify popularity score is based on both recency of streams and total number of streams, continually high scores indicate frequent plays long after release. This score can then be thought of measuring a song's enduring popularity, whose qualities would be of interest to up and coming artists. As the leading U.S. music streamer, Spotify's metrics can reasonably align with Billboard rankings, providing a relatively robust measure of a song's lasting popularity, which is crucial in attempting to infer the elements that make up a "hit".  

To acquire, clean and analyze the data, I used R [@citeR], the tidyverse [@tidyverse] and related software packages. Billboard's "Greatest of All Time Hot 100 Artists" [@greatestofhot100] list identified popular artists. The audio features of the Billboard artists' songs and popularity data were then downloaded from Spotify's API via the spotifyr [@spotifyr] package. Spotify data was current as of 2024, while Billboard rankings were from 2015. The data was cleaned using the dplyr [@dplyr] and janitor [@janitor] packages and saved using arrow [@arrow]. Variables were chosen based on expected impact on popularity, resulting in a dataset with 773 songs. 

For this analysis, the popularity score, valence (musical 'positivity'), danceability, mode (major or minor), presence of explicit lyrics, loudness, and song duration were made of interest. A sample of the cleaned dataset is shown in [@tbl-sample]. This and other tables were created using the knitr [@knitr] packages. Visualizations and modelling summaries used ggplot2 [@ggplot2] and modelsummary [@modelsummary].


```{r tbl-sample}
#| message: false
#| echo: false
#| warning: false
#| tbl-cap: Sample of Dataset
#| fig-align: center

#fix formatting before submitting

spotify_data <- read_parquet("../data/analysis_data/dataset.parquet")


sample_table <- spotify_data |>
  rename(
    `Artist Name` = artist_name,
    `Song Name` = song_name,
    Popularity = popularity,
    Mode = mode,
    Valence = valence, 
    Danceability = danceability, 
    `Explicit` = explicit, 
    `Loudness (dB)` = loudness, 
    `Duration (seconds)` = duration_secs
  ) |>
  head(5) |>
  arrange(`Artist Name`)
  
  kable(sample_table, format = "markdown") |>
  kable_styling(full_width = F, font_size = 1) |>
  column_spec(2, width = "1cm")  # Control the width of specific columns
```

The primarily categorical dataset was first analyzed variable-by-variable. Each variable was examined based on its potential impact on popularity scores, measured from 0-100 with 100 being the most popular. For further inference, the popularity score was then modeled using multiple linear regression, with the other variables as predictors.  

## Popularity 

First, we assess how popularity is distributed across our dataset using a histogram.  

```{r popularity-histogram}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: Histogram of Popularity Scores
#| fig-align: center

ggplot(spotify_data, aes(x = popularity)) +
  geom_histogram(bins = 14, fill = "blue", color = "black") + 
  labs(title = "Histogram of Popularity",
       x = "Popularity",
       y = "Density") +
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5))

```

Against expectations, the histogram in [@popularity-histogram] shows no skewed distribution toward higher popularity scores for the most popular artists. Although most songs have scores between 54 and 86, which indicates relatively lasting popularity, the curve looks somewhat bell-shaped. This indicates that there is an even spread of top performing and mediocre artists, even within the subset of the best performing artists in the world. 

## Valence

Next, we focus on valence. As one of Spotify's algorithmically generated metrics, valence attempts to measure the musical "positivity" of a song's audio, with scores ranging between 0.0 and 1.0. As Spotify's documentation says: "Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry)." [@spotifydocs]. 

```{r scatter-valence}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Scatter plot of Popularity vs. Energy
ggplot(spotify_data, aes(x = valence, y = popularity)) +
  geom_point(alpha = 0.6, color = "coral") +
  ggtitle("Popularity vs. Valence") +
  xlab("Valence") +
  ylab("Popularity Score") +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5)
  )



```

When plotting valence values against popularity scores, [@scatter-valence] shows no clear linear trend between valence and popularity, although a clumping of high valence scores near 1.00, suggests potential data issues.

## Danceability

Like valence, danceability is another algorithmically calculated metric by Spotify. From their API documentation, "Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity. A value of 0.0 is least danceable and 1.0 is most danceable.". 

```{r scatter-danceability}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Scatter plot of Popularity vs. Energy
ggplot(spotify_data, aes(x = danceability, y = popularity)) +
  geom_point(alpha = 0.6, color = "coral") +
  ggtitle("Popularity vs. Danceability") +
  xlab("Danceability") +
  ylab("Popularity Score") +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5)
  )



```

Plotting the danceability scores against popularity in [@scatter-danceability] shows a weak association between danceability and popularity score.   

## Mode

Musical mode indicates whether a song is in a major ('happier') or minor key ('sadder'). Unlike valence, which is calculated from a variety of physical metrics, musical mode is inherent to musical piece and can be inferred from the arrangement of notes in a song. In the dataset, 1 indicates the song is major while 0 is minor. 

```{r maj-min-barchart}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Summarizing the data to count explicit vs. non-explicit songs
song_counts <- spotify_data |>
  group_by(mode) |>
  summarise(count = n()) |>
  mutate(explicit = if_else(mode == 1, "Major", "Minor"))

# Plotting the counts of explicit and non-explicit songs
ggplot(song_counts, aes(x = mode, y = count, fill = explicit)) +
  geom_col() +  # geom_col is used for bar plots with predefined data summaries
  ggtitle("Count of Major vs. Minor Songs") +
  xlab("Song Mode") +
  ylab("Number of Songs") +
  scale_fill_manual(values = c("Major" = "skyblue", "Minor" = "salmon")) +
  theme_minimal() +  # Adds a minimal theme for better aesthetics
  theme(
    axis.text.x = element_blank(),  # Hides the x-axis text
    axis.ticks.x = element_blank(), 
    plot.title.position = "plot",
    plot.title = element_text(hjust = 0.5)
  )

```

[@maj-min-barchart] shows that the most popular songs are in a major key, with more than twice as many major songs than minor songs.

```{r density-plot}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Comparing popularity distributions for different modes
ggplot(spotify_data, aes(x = popularity, fill = as.factor(mode))) +
  geom_density(alpha = 0.5) +
  ggtitle("Popularity Distribution by Mode") +
  xlab("Popularity Score") +
  ylab("Density") +
  scale_fill_manual(values = c("dodgerblue", "gold"), labels = c("Minor", "Major")) +
  theme(
    plot.title = element_text(hjust = 0.5)
  )


```

Creating a density plot comparison in [@density-plot] shows that although there are more major songs overall, there actually appears to be more songs in minor keys that have higher popularity scores. This means that audiences may tend to have a higher preference for songs in minor keys over major. 

## Explicit Status

Spotify records whether a song contains explicit lyrics through reporting by the music publishers. 

```{r explicit-bar-chart}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Summarizing the data to count explicit vs. non-explicit songs
song_counts <- spotify_data |>
  group_by(explicit) |>
  summarise(count = n()) |>
  mutate(explicit = if_else(explicit == 1, "Explicit", "Not Explicit"))

# Plotting the counts of explicit and non-explicit songs
ggplot(song_counts, aes(x = explicit, y = count, fill = explicit)) +
  geom_col() +  # geom_col is used for bar plots with predefined data summaries
  ggtitle("Count of Explicit vs. Non-Explicit Songs") +
  xlab("Song Type") +
  ylab("Number of Songs") +
  scale_fill_manual(values = c("Not Explicit" = "skyblue", "Explicit" = "salmon")) +
  theme_minimal()  # Adds a minimal theme for better aesthetics

```

[@explicit-bar-chart] shows an imbalanced amount of non-explicit songs among popular artists, with more than seven times that of the number of explicit songs. That could be a artifact of radio stations preferences for songs without explicit language. 

```{r explicit-density-plot}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Comparing popularity distributions for explicit status
ggplot(spotify_data, aes(x = popularity, fill = as.factor(explicit))) +
  geom_density(alpha = 0.5) +
  ggtitle("Popularity Distribution by Explicit Status") +
  xlab("Popularity Score") +
  ylab("Density") +
  scale_fill_manual(values = c("dodgerblue", "gold"), labels = c("Not Explicit", "Explicit")) 
  theme(
    plot.title = element_text(hjust = 0.5)
  )


```

Comparing the distribution of popularity scores between explicit and not-explicit songs shows a different story when it comes to popularity score on Spotify. Here, we see that explicit songs have the highest density at higher popularity scores, which indicates that explicit songs tend to be given higher popularity scores on average. This could mean that explicit songs are simply more popular on streaming services like Spotify, where users can choose what music they would like to listen to. 

## Loudness

The average loudness of a song, in decibels (dB) is calculated by averaging the height of the waveforms in a particular song. In [@scatter-loudness] we plot loudness against popularity to assess any relationship between the two variables. 

```{r scatter-loudness}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Scatter plot of Popularity vs. Energy
ggplot(spotify_data, aes(x = loudness, y = popularity)) +
  geom_point(alpha = 0.6, color = "coral") +
  ggtitle("Popularity vs. Loudness") +
  xlab("Loudness") +
  ylab("Popularity Score") +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5)
  )



```

[@scatter-loudness] shows no clear relationship between loudness and popularity, likely due to the varied nature of popular music and other confounding factors. That makes sense, since there could be songs that are "known" for being soft and emotional, while others are loud. Given the varied nature of pop music, it is to be expected.

## Duration 

Duration's effect on popularity was then investigated.

```{r duration-histogram}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

ggplot(spotify_data, aes(x = duration_secs/60)) +
  geom_histogram(bins = 20, fill = "blue", color = "black") + 
  labs(title = "Histogram of Song Duration (Mins)",
       x = "Duration (mins)",
       y = "Density") +
  theme_minimal() + 
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5))

```

Most popular songs range from 2.5 to 5 minutes based on [@duration-histogram], but [@scatter-duration] reveals no linear relationship between duration and popularity.

```{r scatter-duration}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

# Scatter plot of Popularity vs. Energy
ggplot(spotify_data, aes(x = duration_secs, y = popularity)) +
  geom_point(alpha = 0.6, color = "coral") +
  ggtitle("Popularity vs. Duration") +
  xlab("Duration") +
  ylab("Popularity Score") +
  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5)
  )



```



# Data Modelling {#sec-model}

While individual variable analyses provide some surface-level insights into the determinants of the popularity of a song, music's complexity necessitates considering variables together for reasonable and informative inference.

## Model justification
Creating a linear regression model is primarily motivated by the fact that it can account for relationships between the variables and the popularity, as well the relationships between the predictor variables themselves. Running a linear regression model allows us to isolate effects of a particular variable while also controlling for the effects of the other variables at the same time. 

Before conducting the analysis, however, several tests were conducted (shown in [@sec-testing]) to verify the data fit within the linear regression assumptions of linearity, normally distributed errors, and homoscedasticity of residuals. This ensured that the data was well suited for analysis using a multiple regression.

## Model set-up

We are interested in investigating the relationship between several variables and popularity. These variables are: valence, danceability, mode, explicit lyrics, loudness, and duration. For each of the variables we are investigating, we have a null and an alternative hypothesis. 


**The null hypothesis ($H_0$):** there is no significant linear relationship between one of the variables and a given Spotify popularity score, holding everything else constant. 

**The alternative hypothesis ($H_1$):** a significant linear relationship exists between one of the variables and a given Spotify popularity score, holding everything else constant. 

For a particular variable, a low p-value for the regression coefficient would provide evidence against the null hypothesis, indicating that the variable has a meaningful effect on Spotify popularity score. On the other hand, if the p-value is high, this would suggest that there is not enough evidence to reject the null hypothesis, and there may be no significant linear relationship between the variable and the Spotify popularity score. Ultimately, the results of the analysis will inform whether the null hypothesis can be rejected or not.


The equation for our linear model can be written as follows: 

<center>
$S = \beta_0 + \beta_1V + \beta_2D + \beta_3M + \beta_4E + \beta_5L + \beta_6T + \epsilon$, 
</center>

where, 

- $S$ is a song's Spotify popularity score.  

- $\beta_0$ is the model constant, better known as $S$ when all the other variables are 0, 

- $\beta_1$ is effect of valence (measured 0-1) on $S$, 

- $\beta_2$ is effect of danceability (measured 0-1) on $S$, 

- $\beta_3$ is effect of musical mode (0 or 1) on $S$, 

- $\beta_4$ is effect of explicit lyrics (0 or 1) on $S$, 

- $\beta_5$ is effect of loudness (measured in decibels) on $S$, 

- $\beta_6$ is effect of song duration (measured in seconds) on $S$, and 

- $\epsilon$ is the the random error term, which accounts for variation in $S$ that is not explained by the relationship with any of the other variables. 

The aim of computing a regression is to estimate a line with the parameters $\beta_0$ to $\beta_6$ so that the difference (error) between the predicted line and the data points is minimized. By doing this, we get an equation for a line that best fits the data, allowing for the estimation of a given Spotify score for a set of audio features.

In the linear model, the dependent variable $S$ represents the Spotify popularity score measured from 0 to 100. 

- The variable $V$ denotes the valence (emotional positivity) of the song, measured from 0 to 1, where 1 is the most positive. The coefficient $\beta_1$ quantifies how a one-unit increase in valence (e.g., from 0.5 to 1.0) affects the popularity score $S$. 
- The variable $D$ represents the danceability of the song, also scaled from 0 to 1, with higher values indicating more danceability. The coefficient $\beta_2$ captures the change in $S$ for a one-unit increase in danceability. 

- The binary variable $M$ indicates the musical mode (0 for minor, 1 for major), with $\beta_3$ reflecting the difference in popularity between major and minor keys. 

- The binary variable $E$ indicates explicit lyrics (0 for non-explicit, 1 for explicit), where $\beta_4$ estimates the effect of explicit content on popularity. 

- The variable $L$ denotes the loudness of the song in decibels, with $\beta_5$ quantifying how a one-decibel increase in loudness impacts the popularity score $S$. 

- Finally, $T$ represents the duration of the song in seconds, and $\beta_6$ estimates the effect of an additional second on the popularity score.


# Results {#sec-results}

By running our model with the data collected from Spotify, we get the following results:

\newpage 

```{r model}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

# Load the model from an RDS file
model <- readRDS("../models/model.rds")

# Get summary
model_summary <- summary(model)

# Extract coefficients
coefficients_df <- tibble(
  Term = rownames(model_summary$coefficients),
  Estimate = model_summary$coefficients[, "Estimate"],
  `Std. Error` = model_summary$coefficients[, "Std. Error"],
  Statistic = model_summary$coefficients[, "t value"],
  `P-value` = model_summary$coefficients[, "Pr(>|t|)"]
)
kable(coefficients_df, 
      digits = 2, 
      format = "html",
      caption = "Linear Model of Spotify Popularity Summary"
    )
```

The intercept (65.85) represents the predicted value of the dependent variable when all the independent variables are set to zero. However, since most of the predictors are both scaled or binary, the interpretation of the intercept is not very meaningful in the context of this analysis.

Valence, which measures the emotional positivity of a song on a scale of 0 to 1, has a negative coefficient (-10.96). This suggests that, holding other variables constant, an increase in valence by one unit is associated with a decrease in the predicted Spotify popularity score by approximately 11 points.

```{r effect-plot-valence}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: center

effect_plot(model, 
            pred = valence, 
            interval = TRUE, 
            plot.points = TRUE, 
            jitter = 0.05
          )


```

Danceability, also scaled from 0 to 1, has a positive coefficient (18.24). This indicates that, controlling for other factors, a one-unit increase in danceability is associated with an increase in the predicted popularity score by about 18 points.

```{r effect-plot-danceability}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

effect_plot(model, 
            pred = danceability, 
            interval = TRUE, 
            plot.points = TRUE, 
            jitter = 0.05
          )


```

Mode is a binary variable (likely 0 for minor and 1 for major keys), and its coefficient (-0.85) is not statistically significant (p-value = 0.37), suggesting that the musical mode may not have a significant effect on the popularity score after accounting for other predictors.

```{r effect-plot-mode}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

effect_plot(model, 
            pred = mode, 
            interval = TRUE, 
            plot.points = TRUE, 
            jitter = 0.05
          )


```

Explicit is another binary variable (possibly indicating the presence of explicit lyrics), with a positive coefficient (10.10). This implies that, holding other variables constant, songs with explicit lyrics are predicted to have a popularity score that is approximately 10 points higher than non-explicit songs.

```{r effect-plot-explicit}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

effect_plot(model, 
            pred = explicit, 
            interval = TRUE, 
            plot.points = TRUE, 
            jitter = 0.05
          )


```

Loudness, measured in decibels, has a positive coefficient (0.82), indicating that an increase in loudness by one decibel is associated with an increase in the predicted popularity score by 0.82 points, controlling for other factors.

```{r effect-plot-loudness}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

effect_plot(model, 
            pred = loudness, 
            interval = TRUE, 
            plot.points = TRUE, 
            jitter = 0.05
          )


```

Duration has a positive coefficient (0.01) with a p-value of 0.10, which is marginally significant. This suggests that, holding other variables constant, an increase in song duration by one second is associated with a slight increase in the predicted popularity score by 0.01 points.

```{r effect-plot-duration}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

effect_plot(model, 
            pred = duration_secs, 
            interval = TRUE, 
            plot.points = TRUE, 
            jitter = 0.05
          )


```

Taken together, the regression results indicate that danceability, explicit lyrics, loudness, and, to a lesser extent, song duration are associated with higher Spotify popularity scores, while valence (emotional positivity) has a negative association. The musical mode does not appear to have a significant effect on popularity after accounting for other predictors.

# Discussion {#sec-discussion}

## Impact of Results {#sec-first-point}

These findings offer valuable insights into the extensive efforts undertaken by music technology companies like Spotify to quantify and understand the multifaceted dynamics of music culture. While attempting to reduce the inherently complex artistic medium of music to quantitative measures may appear overly reductive or naive, our analysis demonstrates that even with relatively basic domain knowledge of the music industry, one can uncover meaningful trends and patterns in previously released and publicly consumed music. This realization speaks to the fundamental human propensity for discerning patterns, which extends to our preferences and consumption behaviors in domains as subjective as music, as evidenced by the popularity metrics on the Spotify platform.

Furthermore, the analysis underscores the potential impact and utility of quantitative, data-driven methods in comprehending and potentially shaping cultural phenomena like music popularity. By developing a better understanding of the specific audio elements and characteristics associated with higher popularity and mainstream appeal, artists and music creators could strategically focus their creative efforts and artistic vision on incorporating these elements, potentially mitigating common challenges such as writer's block or creative stagnation.



## Weaknesses and next steps {#sec-weaknesses-next}

### Data and Measurement

The age of the data used, with the Billboard Greatest of All Time list concluding in 2015, may not fully capture contemporary trends and shifts in music culture, especially given the rapid rise of social media platforms like TikTok that drive rapid virality and micro-trends in popular music consumption. Additionally, the crowdsourced nature of certain audio features like valence and danceability, initially derived from subjective assessments by college interns, introduces an element of human subjectivity and potential bias, which could undermine the validity and generalizability of the relationships observed between these features and popularity scores. The reliance solely on Spotify popularity scores as the dependent variable may overly represent newer music versus older releases that gained popularity through non-digital means. That said, the recency factor incorporated into Spotify's scoring algorithm could potentially mitigate this concern for tracks that have maintained enduring popularity over time, which gives this analysis merit. 


### Methodology 

Methodological limitations arising from the use of multiple regression complicate the interpreation of our results. Potential unknown multicollinearity, through having two audio features be correllated in some way, could affect the interpretation and relative influence of individual variables on popularity scores. Moreover, the use of a linear regression model, while providing good initial insights, could oversimplify the relationships by failing to capture non-linear or simultaneous interaction effects between the variables analyzed. Furthermore, the dataset's limited scope, comprising only the top 10 songs per artist and excluding some tracks due to missing audio feature data from Spotify's API, restricts the sample size and may impact the precision and robustness of the parameter estimates.


### Next steps 

To address the weaknesses and expand upon the present findings, there are several avenues for future research emerge. Constructing a more comprehensive dataset with complete artist discographies and a broader array of audio features could better capture the complex relationships between musical characteristics and popularity. Exploring non-linear modeling techniques or machine learning algorithms may uncover nuanced patterns and interactions that linear models cannot detect. Incorporating alternative data sources or popularity metrics beyond the Spotify platform could provide further insights into the determinants of song appeal and resonance with audiences. Repeating the analysis on specific musical genres or using different lists of top artists could uncover genre-specific relationships or other variable influences that may be obscured in the present, more general analysis. Finally, validating and cross-referencing the results across multiple data sources would be crucial to assessing their reliability and generalizability to the whole pop music genre. 

Despite it's shortcomings, my approach affords merit as the first step by a cultural analyst in using the openly available data from Spotify to analyze and quantify what makes popular music popular. Through this analysis, I hope to inspire future work in attempting to understand the uniquely human elements of what makes our global culture tick. 

\newpage

# References

::: {#refs}
:::

\newpage

\appendix

# Appendix {-}

## Model Testing {#sec-testing}  

```{r model-testing}
#| message: false
#| echo: false
#| warning: false
#| fig-align: center

# Residuals Plot
plot(model$fitted.values, residuals(model),
     main = "Residuals vs Fitted",
     xlab = "Fitted values",
     ylab = "Residuals")
abline(h = 0, col = "red")

# Q-Q Plot
qqnorm(residuals(model))
qqline(residuals(model), col = "steelblue")

#Scale-Location Plot 
plot(model$fitted.values, sqrt(abs(residuals(model))),
     main = "Scale-Location Plot",
     xlab = "Fitted values",
     ylab = "Square Root of |Residuals|")

# Residual vs Leverage Plot
plot(hatvalues(model), residuals(model),
     main = "Residuals vs Leverage",
     xlab = "Leverage",
     ylab = "Residuals")
abline(h = 0, col = "red")

```


```{r boilerplate-r-chunk}
#| message: false
#| echo: false
#| warning: false
#| fig-cap: CAPTION
#| fig-align: ALIGNMENT

  theme(plot.title.position = "plot",
        plot.title = element_text(hjust = 0.5))


```